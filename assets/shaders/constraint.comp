#ifndef CONSTRAINT_COMP
#define CONSTRAINT_COMP
#include "constants.comp"
#define CONSTRAINT_TYPE_MIN_RELATIVE_POS 0 // minimum necessary relative position
#define CONSTRAINT_TYPE_MAX_RELATIVE_POS 1 // maximum necessary relative position
#define CONSTRAINT_TYPE_RELATIVE_POS 2 // exact necessary relative position
#define CONSTRAINT_TYPE_MIN_DISTANCE 3 // minimum necessary distance
#define CONSTRAINT_TYPE_MAX_DISTANCE 4 // maximum necessary distance
#define CONSTRAINT_TYPE_DISTANCE 5 // exact necessary distance
struct Constraint{
    vec3 relative_position;
    float distance;
    uint constraint_type;
    float stiffness;
    uint this_bone_idx;
    uint other_bone_idx;
};

Constraint collision_constraint(float safe_distance, uint this_bone_idx, uint other_bone_idx){
    Constraint c;
    c.stiffness = PARTICLE_COLLISION_STIFFNESS;
    c.this_bone_idx = this_bone_idx;
    c.other_bone_idx = other_bone_idx;
    c.distance = safe_distance;
    return c;
}

#endif // CONSTRAINT_COMP
#version 450
#extension GL_KHR_shader_subgroup_basic : enable

layout (local_size_x = 32) in;

layout(set = 0, binding = 0) uniform PartialSums{
    double data[];
} partialSums;

layout(set = 0, binding = 1) readonly buffer InputArray{
    double data[];
} inputArray;

shared double localSums[32];

void main()
{
    uint local_id = gl_SubgroupInvocationID.x;
    uint group_size = gl_SubgroupSize.x;

    // Copy from global to local memory
    localSums[local_id] = inputArray[gl_GlobalInvocationID.x];

    // Loop for computing localSums : divide WorkGroup into 2 parts
    for (uint stride = group_size/2; stride>0; stride /=2)
    {
        // Waiting for each 2x2 addition into given workgroup
        subgroupMemoryBarrierShared();

        // Add elements 2 by 2 between local_id and local_id + stride
        if (local_id < stride)
            localSums[local_id] += localSums[local_id + stride];
    }

    // Write result into partialSums[nWorkGroups]
    if (local_id == 0)
        partialSums[gl_SubgroupID.x] = localSums[0];
}
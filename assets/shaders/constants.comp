#ifndef CONSTANTS_COMP
#define CONSTANTS_COMP

#define CHUNK_WIDTH 16
#define CHUNK_DEPTH 16
#define CHUNK_HEIGHT 256
#define GRID_GRANULARITY 8 // the total number of cells in a block is GRID_GRANULARITY raised to the power of 3
#define CELL_SIZE 1./float(GRID_GRANULARITY)
#define CELL_DIAGONAL sqrt(3.)*(CELL_SIZE)
#define PARTICLE_RADIUS (CELL_DIAGONAL)/2. //the is the minimum possible particle size that still guarantees
// only one particle will fall into each grid cell. Here we assume that the center of particle decides,
// which cell a particel falls into. The particles should normally never overlap... well... sporadically it may happen
// that they do, especially if they are moving with high speeds and suddenly collide. But such events should be rare
// and if they do occur, only one fo them will be randomly picked to occupy the grid cell, while the other one will
// be ignored. But in the next simulation step, the particle positions will almost surely change and the two particles
// should at some point fall into different cells and then collision will be detected.
#define PARTICLE_DIAMETER (PARTICLE_RADIUS)*2.
#define CHUNK_WIDTH_IN_CELLS CHUNK_WIDTH*GRID_GRANULARITY
#define CHUNK_DEPTH_IN_CELLS CHUNK_DEPTH*GRID_GRANULARITY
#define CHUNK_HEIGHT_IN_CELLS CHUNK_HEIGHT*GRID_GRANULARITY
#define PARTICLE_COLLISION_DISTANCE_SQUARE (PARTICLE_DIAMETER)*(PARTICLE_DIAMETER)
#define MAX_UINT 4294967295
#define PARTICLE_COLLISION_STIFFNESS 0.2
#define MAX_STIFFNESS 1.0
#define MIN_STIFFNESS 0.0
#define GAUSS_SEIDEL_PASSES 12
#define GRAVITY 0.002
#define DAMPING_COEFFICIENT 0.99
#define BLOCK_COLLISION_FRICTION 0.7
#define BLOCK_COLLISION_MINIMUM_BOUNCE 0.01
#define MUSCLE_REACTION_SPEED 0.01 // determines how quickly distance constraints (that simulate agent's muscles) are updated in response to signal coming from agent's neural network
#define PHYSICS_SIMULATION_DELTA_TIME_PER_STEP 1.
#define NO_OF_TRAVERSABLE_BLOCKS 3 // every traversable block (mobs can pass through it without colliding) is transparent but the opposite may not necessarily hold
#define NO_OF_TRANSPARENT_BLOCKS 7 // The blocks are aligned in such a way that transparent blocks come first. Hence in
// order to check whether a block is transparent or not, it's enough to just check if its ID is below this value
#define BROAD_PHASE_CELL_SIZE 2 // how many blocks make up the side of one cell. Each cell may then hold multiple bones
#define BROAD_PHASE_CHUNK_WIDTH_IN_CELLS (CHUNK_WIDTH/BROAD_PHASE_CELL_SIZE)
#define BROAD_PHASE_CHUNK_DEPTH_IN_CELLS (CHUNK_DEPTH/BROAD_PHASE_CELL_SIZE)
#define BROAD_PHASE_CHUNK_HEIGHT_IN_CELLS (CHUNK_HEIGHT/BROAD_PHASE_CELL_SIZE)
#define BROAD_PHASE_CHUNK_VOLUME_IN_CELLS (BROAD_PHASE_CHUNK_WIDTH_IN_CELLS*BROAD_PHASE_CHUNK_DEPTH_IN_CELLS*BROAD_PHASE_CHUNK_HEIGHT_IN_CELLS)
#define BROAD_PHASE_CELL_CAPACITY 8 // maximum number of bones that can be placed in one cell
#define MAX_BONES 1024

#endif // CONSTANTS_COMP